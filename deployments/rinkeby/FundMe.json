{
  "address": "0x6B24B02513578e2D2Df29ca7c459D952bdbDC879",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAdress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "arrayIndex",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6630bb2a1fe898a868cd4db3728d2991423841ab07e72ed0306c5d41d14a934f",
  "receipt": {
    "to": null,
    "from": "0xF6AD31B5e3CaCa96be527634ff811dbE3A7050f4",
    "contractAddress": "0x6B24B02513578e2D2Df29ca7c459D952bdbDC879",
    "transactionIndex": 31,
    "gasUsed": "1033587",
    "logsBloom": "0x
    "blockHash": "0x2a2eded51d021413d1267c4a183ed6e66533dc1e1f7480688291168d786ebdb9",
    "transactionHash": "0x6630bb2a1fe898a868cd4db3728d2991423841ab07e72ed0306c5d41d14a934f",
    "logs": [],
    "blockNumber": 11155218,
    "cumulativeGasUsed": "4810745",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 2,
  "solcInputHash": "33cb89e7f1cd9b609e7d423e7bb87e3b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAdress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"arrayIndex\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"./priceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    // SECTION state variables\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n    address[] private s_funders;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    address private immutable i_owner;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // SECTION functions\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address s_priceFeedAdress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAdress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Don't Have Enough Eth\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 arrayIndex) public view returns (address) {\\n        return s_funders[arrayIndex];\\n    }\\n\\n    function getAddressToAmountFunded(address fundingAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[fundingAddress];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x15226c29e3ae21e3a3d606b7b4e5a582599871863bb010c51396bdd73f919517\",\"license\":\"GPL-3.0\"},\"contracts/priceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.8;\\n\\n// chainlink to get real world ether price in USD\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface s_priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int price, , , ) = s_priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface s_priceFeed\\n    ) internal view returns (uint256) {\\n        // when we call getPrice() we can add priceFeed of FundMe.sol\\n        uint256 ethPrice = getPrice(s_priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x26f1ca5c5417a125a33ed1a6c60614c3b6ab6937509bb959e51e2e4c475b3b4b\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012d4380380620012d4833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111556200017f600039600081816101e40152818161043301526105be01526111556000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100c7578063893d20e8146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a8d565b610199565b6040516100b49190610ad3565b60405180910390f35b6100c56101e2565b005b3480156100d357600080fd5b506100dc610422565b6040516100e99190610ad3565b60405180910390f35b3480156100fe57600080fd5b5061010761042f565b6040516101149190610afd565b60405180910390f35b34801561012957600080fd5b50610132610457565b60405161013f9190610b77565b60405180910390f35b610150610481565b005b61015a6105bc565b005b34801561016857600080fd5b50610183600480360381019061017e9190610bbe565b610860565b6040516101909190610afd565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610267576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031257600080828154811061028c5761028b610beb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030a90610c49565b91505061026a565b50600067ffffffffffffffff81111561032e5761032d610c92565b5b60405190808252806020026020018201604052801561035c5781602001602082028036833780820191505090505b5060009080519060200190610372929190610983565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039990610cf2565b60006040518083038185875af1925050503d80600081146103d6576040519150601f19603f3d011682016040523d82523d6000602084013e6103db565b606091505b505090508061041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041690610d64565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104c0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108a790919063ffffffff16565b1015610501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f890610dd0565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105b39190610df0565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610641576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106c457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161067a575b5050505050905060005b815181101561074f5760008282815181106106ec576106eb610beb565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074790610c49565b9150506106ce565b50600067ffffffffffffffff81111561076b5761076a610c92565b5b6040519080825280602002602001820160405280156107995781602001602082028036833780820191505090505b50600090805190602001906107af929190610983565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107d690610cf2565b60006040518083038185875af1925050503d8060008114610813576040519150601f19603f3d011682016040523d82523d6000602084013e610818565b606091505b505090508061085c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085390610d64565b60405180910390fd5b5050565b600080828154811061087557610874610beb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108b3836108e3565b90506000670de0b6b3a764000085836108cc9190610e46565b6108d69190610ecf565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092c57600080fd5b505afa158015610940573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109649190610f8d565b5050509150506402540be4008161097b9190611008565b915050919050565b8280548282559060005260206000209081019282156109fc579160200282015b828111156109fb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a3565b5b509050610a099190610a0d565b5090565b5b80821115610a26576000816000905550600101610a0e565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5a82610a2f565b9050919050565b610a6a81610a4f565b8114610a7557600080fd5b50565b600081359050610a8781610a61565b92915050565b600060208284031215610aa357610aa2610a2a565b5b6000610ab184828501610a78565b91505092915050565b6000819050919050565b610acd81610aba565b82525050565b6000602082019050610ae86000830184610ac4565b92915050565b610af781610a4f565b82525050565b6000602082019050610b126000830184610aee565b92915050565b6000819050919050565b6000610b3d610b38610b3384610a2f565b610b18565b610a2f565b9050919050565b6000610b4f82610b22565b9050919050565b6000610b6182610b44565b9050919050565b610b7181610b56565b82525050565b6000602082019050610b8c6000830184610b68565b92915050565b610b9b81610aba565b8114610ba657600080fd5b50565b600081359050610bb881610b92565b92915050565b600060208284031215610bd457610bd3610a2a565b5b6000610be284828501610ba9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c5482610aba565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c8757610c86610c1a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cdc600083610cc1565b9150610ce782610ccc565b600082019050919050565b6000610cfd82610ccf565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d4e600b83610d07565b9150610d5982610d18565b602082019050919050565b60006020820190508181036000830152610d7d81610d41565b9050919050565b7f446f6e2774204861766520456e6f756768204574680000000000000000000000600082015250565b6000610dba601583610d07565b9150610dc582610d84565b602082019050919050565b60006020820190508181036000830152610de981610dad565b9050919050565b6000610dfb82610aba565b9150610e0683610aba565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e3b57610e3a610c1a565b5b828201905092915050565b6000610e5182610aba565b9150610e5c83610aba565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e9557610e94610c1a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eda82610aba565b9150610ee583610aba565b925082610ef557610ef4610ea0565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f1f81610f00565b8114610f2a57600080fd5b50565b600081519050610f3c81610f16565b92915050565b6000819050919050565b610f5581610f42565b8114610f6057600080fd5b50565b600081519050610f7281610f4c565b92915050565b600081519050610f8781610b92565b92915050565b600080600080600060a08688031215610fa957610fa8610a2a565b5b6000610fb788828901610f2d565b9550506020610fc888828901610f63565b9450506040610fd988828901610f78565b9350506060610fea88828901610f78565b9250506080610ffb88828901610f2d565b9150509295509295909350565b600061101382610f42565b915061101e83610f42565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561105d5761105c610c1a565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561109a57611099610c1a565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110d7576110d6610c1a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561111457611113610c1a565b5b82820290509291505056fea2646970667358221220708763b4ed6b2cb7d23e6f9b411920d0bda0db15800030c5af60bddf898d0e2d64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461011d578063b60d428814610148578063be2693f014610152578063d7b4750c1461015c5761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100c7578063893d20e8146100f2575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a8d565b610199565b6040516100b49190610ad3565b60405180910390f35b6100c56101e2565b005b3480156100d357600080fd5b506100dc610422565b6040516100e99190610ad3565b60405180910390f35b3480156100fe57600080fd5b5061010761042f565b6040516101149190610afd565b60405180910390f35b34801561012957600080fd5b50610132610457565b60405161013f9190610b77565b60405180910390f35b610150610481565b005b61015a6105bc565b005b34801561016857600080fd5b50610183600480360381019061017e9190610bbe565b610860565b6040516101909190610afd565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610267576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561031257600080828154811061028c5761028b610beb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061030a90610c49565b91505061026a565b50600067ffffffffffffffff81111561032e5761032d610c92565b5b60405190808252806020026020018201604052801561035c5781602001602082028036833780820191505090505b5060009080519060200190610372929190610983565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161039990610cf2565b60006040518083038185875af1925050503d80600081146103d6576040519150601f19603f3d011682016040523d82523d6000602084013e6103db565b606091505b505090508061041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041690610d64565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104c0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108a790919063ffffffff16565b1015610501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f890610dd0565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105b39190610df0565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610641576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106c457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161067a575b5050505050905060005b815181101561074f5760008282815181106106ec576106eb610beb565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074790610c49565b9150506106ce565b50600067ffffffffffffffff81111561076b5761076a610c92565b5b6040519080825280602002602001820160405280156107995781602001602082028036833780820191505090505b50600090805190602001906107af929190610983565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107d690610cf2565b60006040518083038185875af1925050503d8060008114610813576040519150601f19603f3d011682016040523d82523d6000602084013e610818565b606091505b505090508061085c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085390610d64565b60405180910390fd5b5050565b600080828154811061087557610874610beb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108b3836108e3565b90506000670de0b6b3a764000085836108cc9190610e46565b6108d69190610ecf565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092c57600080fd5b505afa158015610940573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109649190610f8d565b5050509150506402540be4008161097b9190611008565b915050919050565b8280548282559060005260206000209081019282156109fc579160200282015b828111156109fb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a3565b5b509050610a099190610a0d565b5090565b5b80821115610a26576000816000905550600101610a0e565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5a82610a2f565b9050919050565b610a6a81610a4f565b8114610a7557600080fd5b50565b600081359050610a8781610a61565b92915050565b600060208284031215610aa357610aa2610a2a565b5b6000610ab184828501610a78565b91505092915050565b6000819050919050565b610acd81610aba565b82525050565b6000602082019050610ae86000830184610ac4565b92915050565b610af781610a4f565b82525050565b6000602082019050610b126000830184610aee565b92915050565b6000819050919050565b6000610b3d610b38610b3384610a2f565b610b18565b610a2f565b9050919050565b6000610b4f82610b22565b9050919050565b6000610b6182610b44565b9050919050565b610b7181610b56565b82525050565b6000602082019050610b8c6000830184610b68565b92915050565b610b9b81610aba565b8114610ba657600080fd5b50565b600081359050610bb881610b92565b92915050565b600060208284031215610bd457610bd3610a2a565b5b6000610be284828501610ba9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c5482610aba565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c8757610c86610c1a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cdc600083610cc1565b9150610ce782610ccc565b600082019050919050565b6000610cfd82610ccf565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d4e600b83610d07565b9150610d5982610d18565b602082019050919050565b60006020820190508181036000830152610d7d81610d41565b9050919050565b7f446f6e2774204861766520456e6f756768204574680000000000000000000000600082015250565b6000610dba601583610d07565b9150610dc582610d84565b602082019050919050565b60006020820190508181036000830152610de981610dad565b9050919050565b6000610dfb82610aba565b9150610e0683610aba565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e3b57610e3a610c1a565b5b828201905092915050565b6000610e5182610aba565b9150610e5c83610aba565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e9557610e94610c1a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eda82610aba565b9150610ee583610aba565b925082610ef557610ef4610ea0565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f1f81610f00565b8114610f2a57600080fd5b50565b600081519050610f3c81610f16565b92915050565b6000819050919050565b610f5581610f42565b8114610f6057600080fd5b50565b600081519050610f7281610f4c565b92915050565b600081519050610f8781610b92565b92915050565b600080600080600060a08688031215610fa957610fa8610a2a565b5b6000610fb788828901610f2d565b9550506020610fc888828901610f63565b9450506040610fd988828901610f78565b9350506060610fea88828901610f78565b9250506080610ffb88828901610f2d565b9150509295509295909350565b600061101382610f42565b915061101e83610f42565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561105d5761105c610c1a565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561109a57611099610c1a565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110d7576110d6610c1a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561111457611113610c1a565b5b82820290509291505056fea2646970667358221220708763b4ed6b2cb7d23e6f9b411920d0bda0db15800030c5af60bddf898d0e2d64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}